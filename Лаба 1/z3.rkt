#lang Scheme
(define (name x)
  (cond
    ((= x 1) "один")
    ((= x 2) "два")
    ((= x 3) "три")
    ((= x 4) "четыре")
    ((= x 5) "пять")
    ((= x 6) "шесть")
    ((= x 7) "семь")
    ((= x 8) "восемь")
    ((= x 9) "девять")
    ((= x 10) "десять")
    ((= x 11) "одиннадцать")
    ((= x 12) "двенадцать")
    ((= x 13) "тринадцать")
    ((= x 14) "четырнадцать")
    ((= x 15) "пятнадцать")
    ((= x 16) "шестнадцать")
    ((= x 17) "семнадцать")
    ((= x 18) "восемнадцать")
    ((= x 19) "девятнадцать")
    ((= x 20) "двадцать")
    ((= x 30) "тридцать")
    ((= x 40) "сорок")
    ((= x 50) "пятьдесят")
    ((= x 60) "шестьдесят")
    ((= x 70) "семьдесят")
    ((= x 80) "восемдеят")
    ((= x 90) "девяносто")
    ((= x 100) "сто")
    (else "")
    )
  )
(define (d1 a) (* 10 (truncate (/ a 10))))
(define (d2 a) (- a (* 10 (truncate (/ a 10)))))

(define con string-append)
(define str number->string)

(define (f a)
  (cond
    ((<= a 20) (name a))
    ((= a 100) (name a))
    ((= (remainder a 10) 0) (name a))
    (else
  (con (con (name  (d1 a)) " ") (name  (d2 a)))
)))
